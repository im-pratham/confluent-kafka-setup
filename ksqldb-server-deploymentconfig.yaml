apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kompose.cmd: F:\kafka\kompose\kompose.exe convert --provider=openshift
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: ksqldb-server
  name: ksqldb-server
spec:
  replicas: 1
  selector:
    io.kompose.service: ksqldb-server
  strategy:
    resources: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: ksqldb-server
    spec:
      containers:
      - env:
        - name: KAFKA_HEAP_OPTS
          value: -Xmx128M -Xms128M
        - name: KSQL_BOOTSTRAP_SERVERS
          value: broker:29092
        - name: KSQL_CACHE_MAX_BYTES_BUFFERING
          value: "0"
        - name: KSQL_CONFIG_DIR
          value: /etc/ksql
        - name: KSQL_CONSUMER_INTERCEPTOR_CLASSES
          value: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
        - name: KSQL_HOST_NAME
          value: ksqldb-server
        - name: KSQL_KSQL_CONNECT_URL
          value: http://connect:8083
        - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
          value: "true"
        - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
          value: "true"
        - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
          value: http://schema-registry:8081
        - name: KSQL_LISTENERS
          value: http://0.0.0.0:8088
        - name: KSQL_PRODUCER_INTERCEPTOR_CLASSES
          value: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
        image: ' '
        name: ksqldb-server
        ports:
        - containerPort: 8088
        resources: {}
      hostname: ksqldb-server
      restartPolicy: Always
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - ksqldb-server
      from:
        kind: ImageStreamTag
        name: ksqldb-server:6.0.1
    type: ImageChange
status: {}
